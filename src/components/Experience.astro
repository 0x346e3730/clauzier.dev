---
import type { Experience as ExperienceType, ColorType, DateInfo, LocationType } from '../data/experiences';
import { Icon } from 'astro-icon/components';

interface Props {
  experience: ExperienceType;
}

const { experience: exp } = Astro.props;

const getTagStyle = (tag: { label: string, colorType: ColorType }) => {
  switch (tag.label) {
    case "Current":
      return 'bg-hacker-primary text-black border-2 border-hacker-primary shadow-[0_0_10px_rgba(0,255,0,0.6),0_0_20px_rgba(0,255,0,0.4)]';
    case "Full-time":
      return 'bg-hacker-primary/10 border-2 border-hacker-primary text-hacker-primary shadow-[0_0_5px_rgba(0,255,0,0.2)]';
    case "Volunteer":
      return 'bg-transparent border-2 border-dashed border-hacker-primary/50 text-hacker-primary/90';
    case "Freelance":
      return 'bg-transparent border border-dashed border-hacker-primary/50 text-hacker-primary/90';
    default:
      return 'bg-hacker-darker border border-hacker-primary/30';
  }
};

const formatDate = (date: DateInfo) => {
  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
  return `${months[date.month - 1]} ${date.year}`;
};

const calculateDuration = (start: DateInfo, end: DateInfo | null) => {
  const endDate = end || { month: new Date().getMonth() + 1, year: new Date().getFullYear() };
  let months = (endDate.year - start.year) * 12 + (endDate.month - start.month) + 1;
  
  const years = Math.floor(months / 12);
  const remainingMonths = months % 12;
  
  if (years === 0) {
    return `${remainingMonths} ${remainingMonths === 1 ? 'month' : 'months'}`;
  } else if (remainingMonths === 0) {
    return `${years} ${years === 1 ? 'year' : 'years'}`;
  } else {
    return `${years} ${years === 1 ? 'year' : 'years'} ${remainingMonths} ${remainingMonths === 1 ? 'month' : 'months'}`;
  }
};

const formatLocation = (location: LocationType) => location === 'remote' ? '[REMOTE]' : '[ON-SITE]';

const duration = calculateDuration(exp.startDate, exp.endDate);
const formattedStartDate = new Date(exp.startDate.year, exp.startDate.month - 1).toISOString().split('T')[0];
const formattedEndDate = exp.endDate 
  ? new Date(exp.endDate.year, exp.endDate.month - 1).toISOString().split('T')[0]
  : null;
---

<article class="border border-hacker-primary p-4 rounded bg-[rgba(0,20,0,0.3)] hover:shadow-[0_0_20px_rgba(0,255,0,0.1)] transition-shadow duration-300">
  <div class="flex flex-col sm:flex-row justify-between items-start gap-2 mb-2">
    <div>
      <h3 class="text-xl font-bold hover:text-hacker-primary/80 transition-colors duration-300">{exp.title}</h3>
      <p class="text-lg opacity-90 flex items-center gap-2">
        <span>{exp.company}</span>
        <span class="text-sm opacity-60">â€¢ {duration}</span>
      </p>
      <div class="flex flex-wrap gap-2 mt-2" role="list" aria-label="Job tags">
        {exp.tags?.map((tag) => (
          <span class={`px-2 py-0.5 text-sm rounded-sm font-medium tag ${getTagStyle(tag)}`} role="listitem">
            {tag.label}
          </span>
        ))}
      </div>
    </div>
    <div class="text-right text-sm opacity-80 metadata">
      <p>{formatLocation(exp.location)}</p>
      <p>
        <time datetime={formattedStartDate}>{formatDate(exp.startDate)}</time>
        {" - "}
        {exp.endDate ? (
          <time datetime={formattedEndDate}>{formatDate(exp.endDate)}</time>
        ) : (
          <span>Present</span>
        )}
      </p>
    </div>
  </div>
  
  <ul class="list-disc list-inside space-y-1 text-base opacity-90 mb-4">
    {exp.description.map((desc) => (
      <li class="leading-relaxed">{desc}</li>
    ))}
  </ul>

  {exp.testimonial && (
    <div class="border-t border-hacker-primary/30 pt-4">
      <details class="group">
        <summary class="cursor-pointer list-none flex items-center gap-2 text-sm hover:text-hacker-primary/80 transition-colors">
          <Icon name="ph:quotes" class="w-4 h-4" aria-hidden="true" />
          <span>Manager's Testimonial</span>
          <Icon 
            name="ph:caret-down" 
            class="w-4 h-4 transition-transform duration-300 group-open:rotate-180"
            aria-hidden="true"
          />
        </summary>
        <blockquote class="mt-4 pl-4 border-l-2 border-hacker-primary/30">
          <p class="text-sm italic opacity-90 mb-2">{exp.testimonial.quote}</p>
          <footer class="text-sm">
            <cite class="font-bold not-italic">{exp.testimonial.author}</cite>
            <p class="opacity-80">{exp.testimonial.title}</p>
          </footer>
        </blockquote>
      </details>
    </div>
  )}
</article>

<style>
  details summary::-webkit-details-marker {
    display: none;
  }
</style> 